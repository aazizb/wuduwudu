@model List<EditUserViewModel>
@using IWSProject.Content
@using IWSProject.Models
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "UsersGridView";
        settings.Caption = IWSLocalResource.RolesAssignement;

        settings.CallbackRouteValues = new { Controller = "Account", Action = "UsersList" };

        settings.KeyFieldName = "UserName";

        settings.Settings.ShowGroupPanel = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.PageSize = 32;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 350;
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.ClientSideEvents.RowClick =
                                   string.Format("function(s, e) {{ OnRowClicked(s, e, '{0}'); }}", 
                                   Url.Action("UserRoles"));

        settings.Columns.Add("FirstName").Caption = IWSLocalResource.FirstName;
        settings.Columns.Add("LastName").Caption = IWSLocalResource.LastName;
        settings.Columns.Add("UserName").Caption = IWSLocalResource.User;
        settings.Columns.Add("Email").Caption = IWSLocalResource.Email;
        settings.Columns.Add("Company").Caption = IWSLocalResource.company;

        settings.DataBinding = (sender, e) =>
        {
            ((MVCxGridView)sender).ForceDataRowType(typeof(EditUserViewModel));
        };
    });
    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()

