@using IWSProject.Content
@using IWSProject.Models

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "DetailGridView";
        settings.Caption = IWSLocalResource.LineGoodReceiving;
        settings.SettingsDetail.MasterGridName = "MasterGridViewPartial";
        settings.CallbackRouteValues = new { Controller = "goodreceivings", Action = "DetailGridViewPartial", transid = Session["transid"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "goodreceivings", Action = "DetailGridViewPartialAddNew", transid = Session["transid"] };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "goodreceivings", Action = "DetailGridViewPartialUpdate", transid = Session["transid"] };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "goodreceivings", Action = "DetailGridViewPartialDelete", transid = Session["transid"] };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.CommandColumn.Visible = true;settings.CommandColumn.Width = Unit.Pixel(120);
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEdit16x16devav;
        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.CommandButtonInitialize = (s, e) =>
        {
            var value = Session["IsValidated"];
            if (e.ButtonType == ColumnCommandButtonType.Edit || e.ButtonType == ColumnCommandButtonType.Delete
                                                    || e.ButtonType==ColumnCommandButtonType.New)
            {
                e.Enabled = false.Equals(value);
            }
        };

        settings.KeyFieldName = "id";

        settings.Width = Unit.Percentage(100);
        settings.SettingsPager.PageSize = 24;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 350;
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);


        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("id").Caption = IWSLocalResource.id;

        settings.Columns.Add(column =>
        {
            column.FieldName = "item";
            column.Caption = IWSLocalResource.item;
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetArticle();
                combo.Columns.Add("id").Caption = IWSLocalResource.id;
                combo.Columns.Add("name").Caption = IWSLocalResource.item;
                combo.TextFormatString = "{0}-{1}";
            });
        });

        settings.Columns.Add("unit").Caption = IWSLocalResource.unit;

        settings.Columns.Add(column =>
        {
            column.FieldName = "price";
            column.Caption = IWSLocalResource.price;
            column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatString = "c";
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = UInt32.MaxValue;
                p.SpinButtons.ShowLargeIncrementButtons = true;
                p.Width = Unit.Percentage(100);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "quantity";
            column.Caption = IWSLocalResource.quantity;
            column.EditorProperties().SpinEdit(p =>
            {
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = UInt32.MaxValue;
                p.SpinButtons.ShowLargeIncrementButtons = true;
                p.Width = Unit.Percentage(100);
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "VatCode";
            column.Caption = IWSLocalResource.vat;
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetVAT();
                combo.Columns.Add("id").Caption = IWSLocalResource.id;
                combo.Columns.Add("name").Caption = IWSLocalResource.vat;
                combo.TextFormatString = "{0}-{1}";
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "duedate";
            column.Caption = IWSLocalResource.duedate;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormatString = "MM/dd/yyyy";
                d.NullDisplayText = "MM/dd/yyyy";
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "MM/dd/yyyy";
                d.DisplayFormatInEditMode = true;
                d.AllowUserInput = true;
                d.AllowMouseWheel = true;

            });
        });

        settings.Columns.Add("text").Caption = IWSLocalResource.text;

        #region Template
        settings.SetEditFormTemplateContent(templateContent =>
        {
            var editItem = ViewData["lineGood"] != null ? ViewData["lineGood"] : templateContent.DataItem;

            Html.DevExpress().FormLayout(formLayoutSettings =>
            {
                formLayoutSettings.Name = "DetailGridViewEdit";
                formLayoutSettings.Width = Unit.Percentage(100);
                formLayoutSettings.ColCount = 3;

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "item";
                    i.Caption = IWSLocalResource.item;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = IWSLookUp.GetArticle();
                        s.Properties.Columns.Add("id").Caption = IWSLocalResource.id;
                        s.Properties.Columns.Add("name").Caption = IWSLocalResource.item;
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                        s.Properties.ClientSideEvents.SelectedIndexChanged = "OnSelectedIndexChanged";
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "unit";
                    i.Caption = IWSLocalResource.unit;
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "price";
                    i.Caption = IWSLocalResource.price;
                    i.NestedExtension().SpinEdit(s =>
                    {
                        s.Properties.DisplayFormatString = "C";
                        s.Properties.MinValue = 0;
                        s.Properties.MaxValue = UInt32.MaxValue;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                        s.Width = Unit.Percentage(100);
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "quantity";
                    i.Caption = IWSLocalResource.quantity;
                    i.NestedExtension().SpinEdit(s =>
                    {
                        s.Properties.MinValue = 0;
                        s.Properties.MaxValue = UInt32.MaxValue;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.SpinButtons.ShowLargeIncrementButtons = true;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "VatCode";
                    i.Caption = IWSLocalResource.vat;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = IWSLookUp.GetVAT();
                        s.Properties.Columns.Add("id").Caption = IWSLocalResource.id;
                        s.Properties.Columns.Add("name").Caption = IWSLocalResource.vat;
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                        s.Properties.ClientSideEvents.SelectedIndexChanged = "OnSelectedIndexChanged";
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "duedate";
                    i.Caption = IWSLocalResource.duedate;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                    i.NestedExtension().DateEdit(d =>
                    {
                        d.Properties.UseMaskBehavior = true;
                        d.Properties.EditFormat = EditFormat.Date;
                        d.Properties.EditFormatString = "d";
                        d.Properties.Width = Unit.Percentage(100);
                        d.Properties.AllowUserInput = true;
                        d.Properties.AllowMouseWheel = true;
                    });
                });

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "text";
                    i.Caption = IWSLocalResource.text;
                    i.NestedExtension().Memo(s =>
                    {
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Width = Unit.Percentage(100);
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                }).SetNestedContent(() =>
                {
                    ViewContext.Writer.Write("<div style='float:right'>");

                    Html.DevExpress().Button(
                btnSettings =>
                {
                    btnSettings.Name = "btnUpdate";
                    btnSettings.Text = IWSLocalResource.btnUpdate;
                    btnSettings.Style[HtmlTextWriterStyle.MarginRight] = "5px";
                    btnSettings.Images.Image.IconID = IconID.ActionsUp216x16;
                    btnSettings.ClientSideEvents.Click = "function(s, e){ DetailGridView.UpdateEdit(); }";
                }).Render();

                    Html.DevExpress().Button(
                btnSettings =>
                {
                    btnSettings.Name = "btnCancel";
                    btnSettings.Text = IWSLocalResource.btnCancel;
                    btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    btnSettings.Images.Image.IconID = IconID.ActionsCancel16x16;
                    btnSettings.ClientSideEvents.Click = "function(s, e){ DetailGridView.CancelEdit(); }";
                }).Render();
                    ViewContext.Writer.Write("</div>");
                });
            })
            .Bind(ViewData["lineGood"] ?? templateContent.DataItem)
            .Render();
        });
        #endregion

        settings.DataBinding = (sender, e) =>
        {
            ((MVCxGridView)sender).ForceDataRowType(typeof(LineGoodReceiving));
        };
    });

    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);

    }
}
@grid.Bind(Model).GetHtml()